name: Deploy apps

on:
  push:
    branches:
      - develop
  pull_request: {}

jobs:
  lint:
    name: ‚¨£ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: NRWL Set Shas
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: develop

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.0

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1

      - name: üî¨ Lint
        run: npx nx affected --target=lint --parallel=3

  typecheck:
    name:  ¶ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: NRWL Set Shas
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: develop

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.0

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1

      - name: üîé Type check
        run: npx nx affected --target=type-check --parallel=3

  test:
    name: ‚ö° Test
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: NRWL Set Shas
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: develop

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.0

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1

      - name: ‚ö° Run tests
        run: npx nx affected --target=test --parallel=3 --coverage
        env:
          OPEN_FIGI_KEY: ${{ secrets.OPEN_FIGI_KEY }}
          PLAID_ENV: ${{ secrets.PLAID_ENV }}
          PLAID_CLIENT_ID: ${{ secrets.PLAID_CLIENT_ID }}
          PLAID_CLIENT_SECRET: ${{ secrets.PLAID_CLIENT_SECRET }}
          IEX_BASE_URL: ${{ secrets.IEX_BASE_URL }}
          IEX_TOKEN: ${{ secrets.IEX_TOKEN }}
  build:
    name: üê≥ Build
    # only build/deploy master branch on pushes
    if: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: üëÄ Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: 'fly.toml'
          field: 'app'

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Setup cache
      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üîë Login to docker hub
        uses: docker/login-action@v2
        with:
          registry: hub.docker.com
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: üê≥ Docker build
        run: npx nx affected --target=docker-affected

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: üöö Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    name: 'üöÄ Deploy to Production üöÄ'
    needs: [lint, test, typecheck]
    if: ${{ (github.ref == 'refs/heads/master') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    environment: Production
    env:
      CYPRESS_INSTALL_BINARY: 0
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: NRWL Set Shas
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: develop

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.0

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1

      - name: Setup fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy affected apps
        run: npx nx affected --target=deploy-docker-image --parallel=2
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deployStaging:
    name: 'üöÄ Deploy to Staging üöÄ'
    needs: [lint, test, typecheck]
    if: ${{ (github.ref == 'refs/heads/develop') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    environment: 'Staging'
    env:
      CYPRESS_INSTALL_BINARY: 0
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: NRWL Set Shas
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: develop

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.0

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1

      - name: Setup fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy affected apps
        run: npx nx affected --target=deploy-docker-image --parallel=3
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  cypress-chrome:
    name: 'Cypress - chrome'
    needs: [deployStaging]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: NRWL Set Shas
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: develop

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.0

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1

      - run: npx nx start e2e --record --key a4d15492-3acd-487c-8651-3306c6b45cb2 --browser chrome
        env:
          CYPRESS_FF_USER: ${{ secrets.CYPRESS_FF_USER }}
          CYPRESS_FF_PASS: ${{ secrets.CYPRESS_FF_PASS }}
          CYPRESS_CHROME_USER: ${{ secrets.CYPRESS_CHROME_USER }}
          CYPRESS_CHROME_PASS: ${{ secrets.CYPRESS_CHROME_PASS }}
          CYPRESS_AUTH0_DOMAIN: ${{ secrets.CYPRESS_AUTH0_DOMAIN }}
          CYPRESS_AUTH0_CLIENT_ID: ${{ secrets.CYPRESS_AUTH0_CLIENT_ID }}
          CYPRESS_AUTH0_CLIENT_SECRET: ${{ secrets.CYPRESS_AUTH0_CLIENT_SECRET }}
          CYPRESS_AUTH0_AUDIENCE: ${{ secrets.CYPRESS_AUTH0_AUDIENCE }}
          CYPRESS_AUTH0_SCOPE: ${{ secrets.CYPRESS_AUTH0_SCOPE }}
          CYPRESS_ATLAS_CLUSTER_URI: ${{ secrets.CYPRESS_ATLAS_CLUSTER_URI }}

  cypress-firefox:
    name: 'Cypress - firefox'
    needs: [deployStaging]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: NRWL Set Shas
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: develop

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.0

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1

      - run: npx nx start e2e --record --key a4d15492-3acd-487c-8651-3306c6b45cb2 --browser firefox
        env:
          CYPRESS_FF_USER: ${{ secrets.CYPRESS_FF_USER }}
          CYPRESS_FF_PASS: ${{ secrets.CYPRESS_FF_PASS }}
          CYPRESS_CHROME_USER: ${{ secrets.CYPRESS_CHROME_USER }}
          CYPRESS_CHROME_PASS: ${{ secrets.CYPRESS_CHROME_PASS }}
          CYPRESS_AUTH0_DOMAIN: ${{ secrets.CYPRESS_AUTH0_DOMAIN }}
          CYPRESS_AUTH0_CLIENT_ID: ${{ secrets.CYPRESS_AUTH0_CLIENT_ID }}
          CYPRESS_AUTH0_CLIENT_SECRET: ${{ secrets.CYPRESS_AUTH0_CLIENT_SECRET }}
          CYPRESS_AUTH0_AUDIENCE: ${{ secrets.CYPRESS_AUTH0_AUDIENCE }}
          CYPRESS_AUTH0_SCOPE: ${{ secrets.CYPRESS_AUTH0_SCOPE }}
          CYPRESS_ATLAS_CLUSTER_URI: ${{ secrets.CYPRESS_ATLAS_CLUSTER_URI }}
